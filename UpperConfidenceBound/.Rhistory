state_correct
?as.matrix
as.matrix(state_correct,nrow=2,ncol=2)
as.matrix(state_correct,nrow=2,ncol=10)
as.matrix(state_correct,nrow=2,ncol=10)
n <- as.matrix(state_correct,nrow=2,ncol=10)
n
?as.table(n,nrow=2,ncol=10)
as.table(state_correct)
as.table(state_correct,nrow=2,ncol=10)
as.data.frame(state_correct)
as.data.frame(state_correct,nrow=2,ncol=10)
?data.frame
?marix
?matrix
matrix(data=state_correct,nrow=2,ncol=10)
n <- matrix(data=state_correct,nrow=2,ncol=10)
chisq.test()
?chisq.test
chisq.test(n)
M
n
n[1]
n[1:]
n[1,]
n[1,]/n[2,]
?matrix
n <- matrix(data=state_correct,nrow=2,ncol=10,byrow=TRUE)
n
chisq.test(n)
n[1,]/n[2,]
n[1,]/(n[1,]+n[2,])
uva <- read.csv("UVAStats.csv")
?read.csv
uva <- read.csv("UVAStats.csv",header=TRUE)
uva <- read.csv("UVAStats.csv",header=TRUE)
uva <- read.csv("UVAStats.csv",header=TRUE)
install.packages("twitteR")
library(twitteR)
?twitteR
vignettes("twitteR")
?vingette
twitteR
searchTwitter("@domVAPower")
?get_oauth_sig()
?get_oauth_sig
?registerTwitterOAuth
?getTwitterOAuth
setup_twitter_oauth("pxnTmndisGUxZKqtJPtHziiod","Q8AU9ScwYqvvASMAtO7i9l6xxcaWjNI0AjhsKc3FiwahWMYGjE","276776447-3nluTES1Iy2cperQFp1n4YN7wmPvrzahG1YrcwFQ","x959VBW1CpmRWUlWvH3NJABOTJn2sxuIBDItamlmKPzYM")
searchTwitter("@domVAPower")
?searchTwitter
searchTwitter("@DomVAPower",n=1000,since=2016-09-07)
searchTwitter("@DomVAPower",n=1000,since="2016-09-07")
myTweet <- searchTwitter("@DomVAPower",n=1000,since="2016-09-07")
View(myTweet)
?as.list
?as.matrix
as.matrix(myTweet)
myTweet
?searchTwitter
?toDataFrame
?"as.data.frame"
myTweetFrame <- as.data.frame(myTweet)
myTweet$getText()
myTweet$getText
myTweet
toDataFrame(myTweet)
df <- do.call("rbind", lapply(myTweet, as.data.frame))
View(df)
?write.table
write.table(df,file="DomTweets.tsv",sep="\t")
loans <- read.csv("/Users/ejenvey/Desktop/BonSecours/loanStats.csv")
library(ggplot2)
loans$id <- as.factor(loans$id)
loans$member_id <- as.factor(loans$member_id)
loans$policy_code <- as.factor(loans$policy_code)
loans$not_compliant <- as.factor(loans$not_compliant)
loans$inactive_loans <- as.factor(loans$inactive_loans)
loans$bad_loans <- as.factor(loans$bad_loans)
loans$short_emp <- as.factor(loans$short_emp)
loans$last_delinq_none <- as.factor(loans$last_delinq_none)
loans$last_record_none <- as.factor(loans$last_record_none)
loans$last_major_derog_none <- as.factor(loans$last_major_derog_none)
loans$inactive <- loans$status == "Fully Paid" | loans$status == "Charged Off" | loans$status=="Default"
loans_inactive <- loans[loans$inactive=="TRUE",]
loans_firstrows <- loans[1:6,]
loans <- read.csv("/Users/ejenvey/Desktop/Internal/BonSecours/loanStats.csv")
library(ggplot2)
loans$id <- as.factor(loans$id)
loans$member_id <- as.factor(loans$member_id)
loans$policy_code <- as.factor(loans$policy_code)
loans$not_compliant <- as.factor(loans$not_compliant)
loans$inactive_loans <- as.factor(loans$inactive_loans)
loans$bad_loans <- as.factor(loans$bad_loans)
loans$short_emp <- as.factor(loans$short_emp)
loans$last_delinq_none <- as.factor(loans$last_delinq_none)
loans$last_record_none <- as.factor(loans$last_record_none)
loans$last_major_derog_none <- as.factor(loans$last_major_derog_none)
loans$inactive <- loans$status == "Fully Paid" | loans$status == "Charged Off" | loans$status=="Default"
loans_inactive <- loans[loans$inactive=="TRUE",]
loans_firstrows <- loans[1:6,]
multiplot <- function(..., plotlist=NULL, file, cols=1, layout=NULL) {
library(grid)
# Make a list from the ... arguments and plotlist
plots <- c(list(...), plotlist)
numPlots = length(plots)
# If layout is NULL, then use 'cols' to determine layout
if (is.null(layout)) {
# Make the panel
# ncol: Number of columns of plots
# nrow: Number of rows needed, calculated from # of cols
layout <- matrix(seq(1, cols * ceiling(numPlots/cols)),
ncol = cols, nrow = ceiling(numPlots/cols))
}
if (numPlots==1) {
print(plots[[1]])
} else {
# Set up the page
grid.newpage()
pushViewport(viewport(layout = grid.layout(nrow(layout), ncol(layout))))
# Make each plot, in the correct location
for (i in 1:numPlots) {
# Get the i,j matrix positions of the regions that contain this subplot
matchidx <- as.data.frame(which(layout == i, arr.ind = TRUE))
print(plots[[i]], vp = viewport(layout.pos.row = matchidx$row,
layout.pos.col = matchidx$col))
}
}
}
p1 <- qplot(loans_inactive$loan_amnt, xlab = "Loan Amount ($)",ylab = "Number of Loans", main="Distribution of Loan Amounts")
p2 <- qplot(loans_inactive$term,ylim=c(0,120000),xlab="Term Length", ylab = "Number of Loans", main="Number of Loans by Term Length")
p3 <- qplot(loans_inactive$status,xlab="Status of Loan", ylab = "Number of Loans", main="Number of Loans by Final Status")
p4 <- qplot(loans_inactive$int_rate, xlab = "Interest Rate (%)",ylab = "Number of Loans", main="Distribution of Interest Rates")
multiplot(p1,p2,p3,p4,cols=2)
a <- aggregate(member_id~addr_state, loans_inactive, length)
b <- aggregate(member_id~home_ownership,loans_inactive,length)
p5 <- qplot(a$addr_state,a$member_id, xlab = "State of Residence", ylab="Number of Borrowers", main="Number of Borrowers by State")
p6 <- qplot(b$home_ownership,b$member_id, xlab = "Status of Home Ownership", ylab="Number of Borrowers", main="Number of Borrowers by Home Status")
multiplot(p5,p6,cols=1)
par(mfrow=c(2,1))
plot(loans_inactive$grade,loans_inactive$bad_loans, xlab="Loan Grade (given by The Lending Club)", ylab="Loan in Default?",main="Area Plot of Loan Status by Grade")
plot(loans_inactive$home_ownership,loans_inactive$bad_loans, xlab="Home Ownership Status", ylab="Loan in Default?",main="Area Plot of Loan Status by Grade")
par(mfrow=c(1,2))
boxplot(loans_inactive$payment_inc_ratio~loans_inactive$bad_loans,
xlab="Loan in Default?",ylab = "Payment to Income (PTI) Ratio",
main="PTI Ratio by Loan Status")
boxplot(loans_inactive$dti~loans_inactive$bad_loans,
xlab="Loan in Default?",ylab = "Debt to Income (DTI) Ratio",
main="DTI Ratio by Loan Status")
par(mfrow=c(1,1))
plot(as.factor(loans_inactive[loans_inactive$inq_last_6mths<5,]$inq_last_6mths),
loans_inactive[loans_inactive$inq_last_6mths<5,]$bad_loans)
par(mfrow=c(1,2))
hist(loans_inactive[loans_inactive$bad_loans==0,]$inq_last_6mths, xlim=c(0,10),breaks=150,col="blue")
hist(loans_inactive[loans_inactive$bad_loans==1,]$inq_last_6mths,xlim=c(0,10),breaks=150, col="green")
boxplot(loans_inactive$sub_grade_num~loans_inactive$bad_loans)
boxplot(loans_inactive$sub_grade_num~loans_inactive$bad_loans+loans_inactive$grade)
hist(loans_inactive[loans_inactive$total_rec_late_fee!=0 & loans_inactive$bad_loans==0,]$total_rec_late_fee)
hist(loans_inactive[loans_inactive$total_rec_late_fee!=0 & loans_inactive$bad_loans==1,]$total_rec_late_fee)
qplot(loans$loan_amnt, xlab = "Loan Amount ($)",ylab = "Number of Loans", main="Distribution of Loan Amounts")
qplot(loans_inactive$grade,xlab="Lending Club Loan Grade", ylab = "Number of Loans", main="Number of Loans by Grade")
qplot(loans_inactive$status,xlab="Status of Loan", ylab = "Number of Loans", main="Number of Loans by Final Status")
qplot(loans_inactive$int_rate, xlab = "Interest Rate (%)",ylab = "Number of Loans", main="Distribution of Interest Rates")
qplot(loans_inactive$dti, xlab = "Debt to Income Ratio",ylab = "Number of Loans", main="Distribution of DTI", bins = 70)
qplot(loans_inactive$payment_inc_ratio, xlab = "Payment to Income Ratio",ylab = "Number of Loans", main="Distribution of Payment to Income")
qplot(loans_inactive$home_ownership, xlab = "Home Ownership Catergory",ylab = "Number of Loans", main="Distribution of Howeownership")
d <- density(loans_inactive$int_rate) # returns the density data for a variable
plot(d) # plots the results
bwplot(term~int_rate, data = loans, main = "Loan Interest Rates by Term", xlab = "Interest Rate (%)")
bwplot(term~annual_inc, data = loans, main = "Borrower Income by Term", xlab = "Annual Income ($)")
bwplot(purpose~int_rate, data = loans, main = "Loan Interest Rates by Loan Purpose", xlab = "Interest Rate (%)")
bwplot(purpose~loan_amnt, data = loans, main = "Borrower Income by Loan Purpose", xlab = "Annual Income ($)")
bwplot(bad_loans~int_rate, data = loans, main = "Loan Interest Rates by Loan Status", xlab = "Interest Rate (%)")
bwplot(bad_loans~loan_amnt, data = loans, main = "Borrower Income by Loan Status", xlab = "Annual Income ($)")
library(dplyr)
library(ggplot2)
library(SDMTools)
library(ROCR)
library(lattice)
library(plyr)
library(reshape2)
bwplot(term~int_rate, data = loans, main = "Loan Interest Rates by Term", xlab = "Interest Rate (%)")
bwplot(term~annual_inc, data = loans, main = "Borrower Income by Term", xlab = "Annual Income ($)")
bwplot(purpose~int_rate, data = loans, main = "Loan Interest Rates by Loan Purpose", xlab = "Interest Rate (%)")
bwplot(purpose~loan_amnt, data = loans, main = "Borrower Income by Loan Purpose", xlab = "Annual Income ($)")
bwplot(bad_loans~int_rate, data = loans, main = "Loan Interest Rates by Loan Status", xlab = "Interest Rate (%)")
bwplot(bad_loans~loan_amnt, data = loans, main = "Borrower Income by Loan Status", xlab = "Annual Income ($)")
# by loan purpose
ggplot(data=loans2, aes(x=loans2$purpose,fill=loans2$bad_loans)) + geom_bar(position="fill") + labs(title="Proportion of Loans in Default by Purpose",x="Loan Grade (given by The Lending Club",y="Proportion of Loans in Default") +scale_fill_manual(name="Loans in Default?",breaks=c(1,0),labels=c("Yes","No"),values=c("#00C094","#F8766D"))+scale_x_discrete(labels=(abbreviate=c("credit_card"="crdt_crd","debt_consolidation"="debt_cnsld","home_improvement"="hm_imprv","major_purchase"="mjr_prch","small_business"="sm. biz","wedding"="wdng")))
loans2 <- loans_inactive
loans2$bad_loans <- as.factor(loans2$bad_loans)
ggplot(data=loans2, aes(x=loans2$grade,fill=loans2$bad_loans)) + geom_bar(position="fill") + labs(title="Proportion of Loans in Default by Grade",x="Loan Grade (given by The Lending Club)",y="Proportion of Loans in Default") + scale_fill_manual(name="Loans in Default?",breaks=c(1,0),labels=c("Yes","No"),values=c("#00C094","#F8766D"))
ggplot(data=loans2, aes(x=loans2$home_ownership,fill=loans2$bad_loans)) + geom_bar(position="fill") + labs(title="Proportion of Loans in Default by Home Ownership Status",x="Home Ownership Status",y="Proportion of Loans in Default") + scale_fill_manual(name="Loans in Default?",breaks=c(1,0),labels=c("Yes","No"),values=c("#00C094","#F8766D"))
ggplot(data=loans2, aes(x=loans2$purpose,fill=loans2$bad_loans)) + geom_bar(position="fill") + labs(title="Proportion of Loans in Default by Purpose",x="Loan Grade (given by The Lending Club",y="Proportion of Loans in Default") +scale_fill_manual(name="Loans in Default?",breaks=c(1,0),labels=c("Yes","No"),values=c("#00C094","#F8766D"))+scale_x_discrete(labels=(abbreviate=c("credit_card"="crdt_crd","debt_consolidation"="debt_cnsld","home_improvement"="hm_imprv","major_purchase"="mjr_prch","small_business"="sm. biz","wedding"="wdng")))
loans <- read.csv("loanStats.csv")
loans_complete <- loans[complete.cases(loans),]
loans <- read.csv("loanStats.csv")
head(loans)
View(loans)
plot(loans$payment_inc_ratio)
hist(loans$payment_inc_ratio)
hist(loans$status)
tempo <- read.csv("tempo_kenpom.csv")
View(tempo)
tempo <- tempo[2:,1:2]
tempo <- tempo[2:352,1:2]
View(tempo)
names(tempo) <- c("Rank","tempo")
cor(tempo$Rank,tempo$tempo)
typeof(tempo)
typeof(tempo$Rank)
typeof(tempo$tempo)
tempo$Rank <- as.numeric(tempo$Rank)
tempo <- read.csv("tempo_kenpom.csv")
tempo <- tempo[2:352,1:2]
names(tempo) <- c("Rank","tempo")
?cor
cor(tempo$Rank,tempo$tempo)
tempo$Rank <- as.numeric(tempo$Rank)
View(tempo)
tempo <- read.csv("tempo_kenpom.csv")
tempo <- tempo[2:352,1:2]
names(tempo) <- c("Rank","tempo")
?as.numeric
plot(tempo$Rank,tempo$tempo)
qplot(tempo$Rank,tempo$tempo)
library(ggplot2)
qplot(tempo$Rank,tempo$tempo)
?abline
library(swir)
library(swirl)
swirl()
loans$id <- as.factor(loans$id)
loans$member_id <- as.factor(loans$member_id)
loans$policy_code <- as.factor(loans$policy_code)
loans$not_compliant <- as.factor(loans$not_compliant)
loans$inactive_loans <- as.factor(loans$inactive_loans)
loans$bad_loans <- as.factor(loans$bad_loans)
loans$short_emp <- as.factor(loans$short_emp)
loans$last_delinq_none <- as.factor(loans$last_delinq_none)
loans$last_record_none <- as.factor(loans$last_record_none)
loans$last_major_derog_none <- as.factor(loans$last_major_derog_none)
loans$inactive <- loans$status == "Fully Paid" | loans$status == "Charged Off" | loans$status=="Default"
loans_inactive <- loans[loans$inactive=="TRUE",]
loans_inactive$issue_date <- substr(loans_inactive$issue_d,1,8)
loans_inactive$issue_date <- as.Date(loans_inactive$issue_date,"%Y%m%d")
loans_inactive$termLength <- substr(loans_inactive[,c("term")],1,3)
qplot(loans_inactive$termLength,loans_inactive$loan_amnt)
library(ggplot2)
qplot(loans_inactive$termLength,loans_inactive$loan_amnt)
cor(loans_inactive$termLength,loans_inactive$loan_amnt)
loans_inactive$termLength <- as.integer(loans_inactive$termLength)
cor(loans_inactive$termLength,loans_inactive$loan_amnt)
cor(loans_inactive$termLength,loans_inactive$loan_amnt,method=c("pearson"))
?cor
cor(loans_inactive$termLength,loans_inactive$loan_amnt,method=c("spearman"))
qplot(loans_inactive$grade,loans_inactive$inactive)
plot(loans_inactive$grade,loans_inactive$bad_loans, xlab="Loan Grade (given by The Lending Club)", ylab="Loan in Default?",main="Area Plot of Loan Status by Grade")
if(loans_inactive$inactive == 1){loans_inactive$inactiveFlag == "Yes"
}else{loans_inactive$inactiveFlag == "No"}
View(loans_inactive)
loans_inactive$inactiveFlag <- loans_inactive$inactive
if(loans_inactive$inactive == 1){loans_inactive$inactiveFlag == "Yes"
}else{loans_inactive$inactiveFlag == "No"}
View(loans_inactive)
loans <- read.csv("./Internal/BonSecours/loanStats.csv")
loans$id <- as.factor(loans$id)
loans$member_id <- as.factor(loans$member_id)
loans$policy_code <- as.factor(loans$policy_code)
loans$not_compliant <- as.factor(loans$not_compliant)
loans$inactive_loans <- as.factor(loans$inactive_loans)
loans$bad_loans <- as.factor(loans$bad_loans)
loans$short_emp <- as.factor(loans$short_emp)
loans$last_delinq_none <- as.factor(loans$last_delinq_none)
loans$last_record_none <- as.factor(loans$last_record_none)
loans$last_major_derog_none <- as.factor(loans$last_major_derog_none)
loans$inactive <- loans$status == "Fully Paid" | loans$status == "Charged Off" | loans$status=="Default"
loans_inactive <- loans[loans$inactive=="TRUE",]
loans_inactive$issue_date <- substr(loans_inactive$issue_d,1,8)
loans_inactive$issue_date <- as.Date(loans_inactive$issue_date,"%Y%m%d")
loans_inactive$termLength <- substr(loans_inactive[,c("term")],1,3)
loans_inactive$termLength <- as.integer(loans_inactive$termLength)
View(loans_inactive)
?count
unique(loans_inactive$inactive)
unique(loans_inactive$bad_loans)
library(dplyr)
loans_inactive %>% group_by(bad_loans) %>% summarise(count = ndistinct(bad_loans))
loans_inactive %>% group_by(bad_loans) %>% summarise(count = n_distinct(bad_loans))
loans_inactive %>% group_by(bad_loans) %>% summarise(count = n())
loans_inactive %>% group_by(grade,bad_loans) %>% summarise(count = n())
mydf <- loans_inactive %>% group_by(grade,bad_loans) %>% summarise(count = n())
mydf
plot(mydf)
loans_inactive$badLoanFlag <- loans_inactive$bad_loans
if(loans_inactive$bad_loans == 1){loans_inactive$badLoanFlag == "Yes"
}else{loans_inactive$badLoanFlag == "No"}
View(loans_inactive)
if(loans_inactive$bad_loans == "1"){loans_inactive$badLoanFlag == "Yes"
}else{loans_inactive$badLoanFlag == "No"}
View(loans_inactive)
View(loans_inactive$bad_loans,loans_inactive$badLoanFlag)
View(c(loans_inactive$bad_loans,loans_inactive$badLoanFlag))
?ifelse
loans_inactive$badLoanFlag <- ifelse(loans_inactive$bad_loans == "1","Yes","No")
View(loans_inactive)
mydf <- loans_inactive %>% group_by(badLoanFlag,bad_loans) %>% summarise(count = n())
mydf
plot(loans_inactive$grade,loans_inactive$badLoanFlag, xlab="Loan Grade (given by The Lending Club)", ylab="Loan in Default?",main="Area Plot of Loan Status by Grade")
plot(loans_inactive$grade,loans_inactive$badLoanFlag, xlab="Loan Grade (given by The Lending Club)", ylab="Loan in Default?",main="Area Plot of Loan Status by Grade")
loans_inactive$badLoanFlag <- as.factor(loans_inactive$badLoanFlag)
plot(loans_inactive$grade,loans_inactive$badLoanFlag, xlab="Loan Grade (given by The Lending Club)", ylab="Loan in Default?",main="Area Plot of Loan Status by Grade")
qplot(loans_inactive$grade,loans_inactive$badLoanFlag, xlab="Loan Grade (given by The Lending Club)", ylab="Loan in Default?",main="Area Plot of Loan Status by Grade")
plot(loans_inactive$grade,loans_inactive$badLoanFlag, xlab="Loan Grade (given by The Lending Club)", ylab="Loan in Default?",main="Area Plot of Loan Status by Grade")
ggplot(loans_inactive,aes=(x=grade,y=badLoanFlag)) + geom_bar(stat=count)
ggplot(loans_inactive,aes(x=grade,y=badLoanFlag)) + geom_bar(stat=count)
ggplot(loans_inactive,aes(x=grade,fill=grade)) + geom_bar(stat=count)
library(ggplot2)
ggplot(loans_inactive,aes(x=grade,fill=grade)) + geom_bar(stat=count)
ggplot(loans_inactive,aes(x=grade,fill=grade)) + geom_bar(stat="count")
?ggplot
?geom_bar
ggplot(loans_inactive,aes(x=grade,fill=grade)) + geom_bar()
ggplot(loans_inactive,aes(x=grade,fill=badLoanFlag)) + geom_bar()
ggplot(loans_inactive,aes(x=grade,fill=badLoanFlag)) + geom_bar() + coord.flip()
ggplot(loans_inactive,aes(x=grade,fill=badLoanFlag)) + geom_bar() + coord_flip()
ggplot(loans_inactive,aes(x=grade,fill=badLoanFlag)) + geom_bar() + coord_flip()
+ geom_text(aes(label=Number)
ggplot(loans_inactive,aes(x=grade,fill=badLoanFlag)) + geom_bar() + coord_flip()
+ geom_text(aes(label=Number))
ggplot(loans_inactive,aes(x=grade,fill=badLoanFlag)) + geom_bar() + coord_flip()
+ geom_text(aes(label=badLoanFlag))
ggplot(loans_inactive,aes(x=grade,fill=badLoanFlag)) + geom_bar() + coord_flip()
+ geom_text(aes(label=count))
ggplot(loans_inactive,aes(x=grade,fill=badLoanFlag)) + geom_area()
ggplot(loans_inactive,aes(x=grade,y=badLoanFlag)) + geom_area()
ggplot(loans_inactive,aes(x=grade,fill=badLoanFlag)) + geom_bar() + coord_flip()
plot(loans_inactive$grade,loans_inactive$badLoanFlag, xlab="Loan Grade (given by The Lending Club)", ylab="Loan in Default?",main="Area Plot of Loan Status by Grade")
?plot
Loan in Default?",main="Area Plot of Loan Status by Grade")
plot(loans_inactive$purpose,loans_inactive$bad_loans,
xlab="Purpose for Loan",
ylab="Loan in Default?",main="Area Plot of Loan Status by Loan Purpose",col=c("red","blue"))
plot(loans_inactive$grade,loans_inactive$badLoanFlag,
xlab="Loan Grade (given by The Lending Club)", ylab="Loan in Default?",
main="Area Plot of Loan Status by Grade", col=c("royalblue","green"))
plot(loans_inactive$grade,loans_inactive$badLoanFlag,
xlab="Loan Grade (given by The Lending Club)", ylab="Loan in Default?",
main="Area Plot of Loan Status by Grade", col=c("royalblue","forestgreen"))
plot(loans_inactive$grade,loans_inactive$badLoanFlag,
xlab="Loan Grade (given by The Lending Club)", ylab="Loan in Default?",
main="Area Plot of Loan Status by Grade", col=c("darkblue","forestgreen"))
plot(vcu)
plot(vcu$off,vcu$def)
off <- (85,58,58,105,20,95,38,26,68)
def <- (45,24,25,6,36,22,88,103,53)
vcu <- cbind(off,def)
plot(vcu$off,vcu$def)
off <- [85,58,58,105,20,95,38,26,68]
def <- [45,24,25,6,36,22,88,103,53]
vcu <- cbind(off,def)
plot(vcu$off,vcu$def)
off <- (1,2)
off <- c(85,58,58,105,20,95,38,26,68)
def <- c(45,24,25,6,36,22,88,103,53)
vcu <- cbind(off,def)
plot(vcu$off,vcu$def)
off <- c(85,58,58,105,20,95,38,26,68)
def <- c(45,24,25,6,36,22,88,103,53)
vcu <- cbind(off,def)
vcu_frame <- data.frame(vcu)
plot(vcu$off,vcu$def)
off <- c(85,58,58,105,20,95,38,26,68)
def <- c(45,24,25,6,36,22,88,103,53)
vcu <- cbind(off,def)
vcu_frame <- data.frame(vcu)
plot(vcu_frame$off,vcu_frame$def)
ggplot(data=vcu, aes(x=off,y=def,col=coach))
library(ggplot2)
off <- c(85,58,58,105,20,95,38,26,68)
def <- c(45,24,25,6,36,22,88,103,53)
coach <- c("Wade","Wade","Smart","Smart","Smart","Smart","Smart","Smart")
vcu <- cbind(off,def,coach)
vcu_frame <- data.frame(vcu)
ggplot(data=vcu, aes(x=off,y=def,col=coach))
library(ggplot2)
off <- c(85,58,58,105,20,95,38,26,68)
def <- c(45,24,25,6,36,22,88,103,53)
coach <- c("Wade","Wade","Smart","Smart","Smart","Smart","Smart","Smart")
vcu <- cbind(off,def,coach)
vcu_frame <- data.frame(vcu)
ggplot(data=vcu_frame, aes(x=off,y=def,col=coach))
View(vcu_frame)
library(ggplot2)
off <- c(85,58,58,105,20,95,38,26,68)
def <- c(45,24,25,6,36,22,88,103,53)
coach <- c("Wade","Wade","Smart","Smart","Smart","Smart","Smart","Smart","Smart")
vcu <- cbind(off,def,coach)
vcu_frame <- data.frame(vcu)
ggplot(data=vcu_frame, aes(x=off,y=def,col=coach))
ggplot(data=vcu_frame, aes(x=off,y=def,col=coach)) + geom_point()
ggplot(data=vcu_frame, aes(x=off,y=def,col=coach)) + geom_point()
library(ggplot2)
off <- c(85,58,58,105,20,95,38,26,68)
def <- c(45,24,25,6,36,22,88,103,53)
coach <- c("Wade","Wade","Smart","Smart","Smart","Smart","Smart","Smart","Smart")
vcu <- cbind(off,def,coach)
vcu_frame <- data.frame(vcu)
vcu_frame$off <- as.integer(vcu_frame$off)
vcu_frame$def <- as.integer(vcu_frame$def)
ggplot(data=vcu_frame, aes(x=off,y=def,col=coach)) + geom_point()
library(ggplot2)
off <- c(85,58,58,105,20,95,38,26,68)
def <- c(45,24,25,6,36,22,88,103,53)
coach <- c("Wade","Wade","Smart","Smart","Smart","Smart","Smart","Smart","Smart")
vcu <- cbind(off,def,coach)
vcu_frame <- data.frame(vcu)
vcu_frame$off <- as.integer(as.factor(vcu_frame$off))
vcu_frame$def <- as.integer(as.factor(vcu_frame$def))
ggplot(data=vcu_frame, aes(x=off,y=def,col=coach)) + geom_point()
library(ggplot2)
off <- c(85,58,58,105,20,95,38,26,68)
def <- c(45,24,25,6,36,22,88,103,53)
coach <- c("Wade","Wade","Smart","Smart","Smart","Smart","Smart","Smart","Smart")
vcu <- cbind(off,def,coach)
vcu_frame <- data.frame(vcu)
typeof(vcu_frame$off)
ggplot(data=vcu_frame, aes(x=off,y=def,col=coach)) + geom_point()
vcu_frame$off <- as.double(vcu_frame$off)
vcu_frame$def <- as.numeric(vcu_frame$def)
library(ggplot2)
off <- c(85,58,58,105,20,95,38,26,68)
def <- c(45,24,25,6,36,22,88,103,53)
coach <- c("Wade","Wade","Smart","Smart","Smart","Smart","Smart","Smart","Smart")
vcu <- cbind(off,def,coach)
vcu_frame <- data.frame(vcu)
vcu_frame$def <- as.numeric(vcu_frame$def)
library(ggplot2)
off <- c(85,58,58,105,20,95,38,26,68)
def <- c(45,24,25,6,36,22,88,103,53)
coach <- c("Wade","Wade","Smart","Smart","Smart","Smart","Smart","Smart","Smart")
vcu <- cbind(off,def,coach)
vcu_frame <- data.frame(vcu)
vcu_frame$off <- as.numeric(as.character(vcu_frame$off))
vcu_frame$def <- as.numeric(as.character(vcu_frame$def))
ggplot(data=vcu_frame, aes(x=off,y=def,col=coach)) + geom_point()
library(ggplot2)
off <- c(85,58,58,105,20,95,38,26,68)
def <- c(45,24,25,6,36,22,88,103,53)
coach <- c("Wade","Wade","Smart","Smart","Smart","Smart","Smart","Smart","Smart")
year <- c("2016","2015","2014","2013","2012","2011","2010","2009")
vcu <- cbind(off,def,coach,year)
vcu_frame <- data.frame(vcu)
vcu_frame$off <- as.numeric(as.character(vcu_frame$off))
vcu_frame$def <- as.numeric(as.character(vcu_frame$def))
ggplot(data=vcu_frame, aes(x=off,y=def,col=coach, label=year)) + geom_point() + geom_text(aes(label=year))
ggplot(data=vcu_frame, aes(x=off,y=def,col=coach, label=year)) + geom_point() + geom_text(aes(label=year,vjust=1))
library(ggplot2)
off <- c(85,58,58,105,20,95,38,26,68)
def <- c(45,24,25,6,36,22,88,103,53)
coach <- c("Wade","Wade","Smart","Smart","Smart","Smart","Smart","Smart","Smart")
year <- c("2016","2015","2014","2013","2012","2011","2010","2009","2008")
vcu <- cbind(off,def,coach,year)
vcu_frame <- data.frame(vcu)
vcu_frame$off <- as.numeric(as.character(vcu_frame$off))
vcu_frame$def <- as.numeric(as.character(vcu_frame$def))
ggplot(data=vcu_frame, aes(x=off,y=def,col=coach, label=year)) + geom_point() + geom_text(aes(label=year,vjust=1))
View(loans)
loans_tbl <- tbl_df(loans)
library(dplyr)
loans_tbl <- tbl_df(loans)
grouped_tbl <- loans %<% group_by(sub_grade)
grouped_tbl %<% loans %<% group_by(sub_grade)
?group_by
grouped_tbl <- group_by(loans,sub_grade)
grouped_tbl
?var
var(filter(loans_tbl, sub_grade=="C1"))
loans_tbl_C1 <- filter(loans_tbl,sub_grade=="C1")
var(loans_tbl_C1$int_rate)
loans_tbl_C3 <- filter(loans_tbl,sub_grade=="C3")
var(loans_tbl_C3$int_rate)
loans_tbl_A1 <- filter(loans_tbl,sub_grade=="A1")
var(loans_tbl_A1$int_rate)
?browseURL
install.packages('arules')
library(arules)
#Data Preprocessing
dataset <- read.csv("~/MachineLearningA-Z/Apriori/Market_Basket_Optimisation.csv", header=F)
dataset <- read.transactions("~/MachineLearningA-Z/Apriori/Market_Basket_Optimisation.csv", sep=','
, rm.duplicates = TRUE)
summary(dataset)
itemFrequencyPlot(dataset,topN=100)
itemFrequencyPlot(dataset,topN=10)
?apriori
rules <- apriori(dataset, parameter = list(support = 0.003, confidence = 0.8))
rules
rules <- apriori(dataset, parameter = list(support = 0.003, confidence = 0.4))
inspect(sort(rules, by='lift')[1:10])
rules <- apriori(dataset, parameter = list(support = 0.003, confidence = 0.2))
inspect(sort(rules, by='lift')[1:10])
28/7500
rules <- apriori(dataset, parameter = list(support = 0.004, confidence = 0.2))
inspect(sort(rules, by='lift')[1:10])
setwd("C/Users/ejenvey/LendingClub/R")
getwd()
setwd("/Users/ejenvey/Desktop/LendingClub/R")
getwd()
setwd("/Users/ejenvey/MachineLearningA-Z/UpperConfidenceBound/")
dataset = read.csv("Ads_CTR_Optimisation.csv")
View(dataset)
View(dataset)
